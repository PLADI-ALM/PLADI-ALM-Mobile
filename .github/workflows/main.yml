name: Deploy iOS and Android App to App Store and Play Store
on:
  push:
    branches: [ beta ]
  pull_request:
jobs:
  beta-ios:
    name: iOS 앱 빌드 테스트 및 Testflight 추가
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.13.9'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          
      - name: 캐시된 빌드 파일 초기화
        run: flutter clean 

      - name: 패키지 다운로드
        run: flutter pub get

      - name: Pod 초기화
        run: rm -f ios/Podfile.lock && rm -rf ios/Pods
  
      - name: Pod repository 업데이트
        run: cd ios && pod install --repo-update
  
      - name: IOS Prod 빌드
        run: flutter build ios
        env: 
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}s
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY_CONTENT: ${{ secrets.ASCAPI_KEY_CONTENT }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
  
      - name: fastlane 설치
        run: arch -arm64 brew install fastlane
  
      - name: app store 배포
        run: cd ios && fastlane beta
        env: 
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}s
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
          SLACK_WEBHOOK_URL: ${{ secrets.IOS_SLACK }}
        timeout-minutes: 40
  # beta-android:
  #   name: 안드로이드 앱 빌드 테스트 및 Playstore 추가
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '12.x'
  #     - uses: subosito/flutter-action@v2.8.0
  #       with:
  #         flutter-version: '3.13.9'
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '3.2.2'

  #     - name: Creating key.properties file
  #       env:
  #         PROPERTIES_PATH: "./android/key.properties"
  #       run: |
  #         echo keyPassword=\${{ secrets.KEY_PROPERTY_KEY_PASSWORD }} > ${{env.PROPERTIES_PATH}}
  #         echo storePassword=\${{ secrets.KEY_PROPERTY_STORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
  #         echo keyAlias=\${{ secrets.KEY_PROPERTY_KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
  #         echo storeFile=\${{ secrets.KEY_PROPERTY_STORE_FILE }} >> ${{env.PROPERTIES_PATH}}
          
  #     - name: Decoding Keystore file
  #       run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

  #     - name: 캐시된 빌드 파일 초기화
  #       run: flutter clean 

  #     - name: 패키지 다운로드
  #       run: flutter pub get

  #     - name: Prebuild
  #       run: flutter build appbundle

  #     - name: Execute Fastlane command
  #       run: cd android && fastlane beta
  #       env: 
  #         SLACK_WEBHOOK_URL: ${{ secrets.ANDROID_SLACK }}
